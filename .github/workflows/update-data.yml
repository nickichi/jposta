name: Update CSV and Create PR

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-and-process-csv:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set current date
        run: echo "TODAY=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Install dependencies
        run: yarn install

      - name: Update CSV
        run: yarn update-csv

      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code utf_ken_all.csv || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Check for existing PR
        if: steps.git-check.outputs.changes == 'true'
        uses: actions/github-script@v6
        id: check-pr
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: 'update-zipcode-data-'
            });
            if (prs.data.length > 0) {
              console.log('Existing PR found. Exiting workflow.');
              core.setOutput('existing_pr', 'true');
            } else {
              console.log('No existing PR found. Proceeding with update.');
              core.setOutput('existing_pr', 'false');
            }

      - name: Parse CSV if changed
        if: steps.git-check.outputs.changes == 'true' && steps.check-pr.outputs.existing_pr != 'true'
        run: yarn parse-csv

      - name: Commit CSV changes
        if: steps.git-check.outputs.changes == 'true' && steps.check-pr.outputs.existing_pr != 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update zipcode data"

      - name: Update package.json minor version if changed
        if: steps.git-check.outputs.changes == 'true' && steps.check-pr.outputs.existing_pr != 'true'
        run: |
          npm version minor -m "Bump minor version to %s due to CSV update"
          echo "NEW_VERSION=$(npm pkg get version | tr -d '"')" >> $GITHUB_ENV

      - name: Create Pull Request if changed
        if: steps.git-check.outputs.changes == 'true' && steps.check-pr.outputs.existing_pr != 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: Update CSV data and bump minor version
          title: Update CSV data to ${{ env.NEW_VERSION }} ${{ env.TODAY }}
          body: |
            This PR updates the CSV data and bumps the minor version.
            - Updated utf_ken_all.csv
            - Parsed new CSV data
            - Bumped minor version to ${{ env.NEW_VERSION }}
          branch: update-zipcode-data-${{ env.TODAY }}
          delete-branch: true